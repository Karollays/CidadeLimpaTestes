name: Continuous Integration

on:
  pull_request:  # Aciona para pull requests
  push:          # Aciona para pushs
    branches:
      - '*'  # Isso significa qualquer branch

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Atualize para JDK 17, pois JDK 22 não existe
          distribution: 'temurin'

      - name: Build and test
        run: mvn clean test # Esse comando vai rodar os testes

  deploy:
    runs-on: ubuntu-latest
    needs: continuous-integration  # Esse job depende do anterior
    if: success()  # Esse job só será executado se o job anterior for bem-sucedido

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK for Deployment
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io docker-compose

      - name: Build Docker Image
        run: |
          docker build -t cidadelimpa:latest .

      - name: Push Docker Image to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          docker tag cidadelimpa:latest karolinelays2021/cidadelimpa:latest
          docker push karolinelays2021/cidadelimpa:latest

      - name: Deploy application with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d --build
