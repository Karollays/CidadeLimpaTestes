name: Continuous Integration

on:
  pull_request:  # Aciona para pull requests
  push:          # Aciona para pushs
    branches:
      - '*'  # Isso significa qualquer branch

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Start application services
        run: |
          docker compose -f docker-compose.yml up -d  # Inicia a aplicação e o banco de dados

      - name: Wait for application to be ready
        run: |
          # Espera alguns segundos para o serviço subir
          sleep 10  

      - name: Run tests
        run: mvn clean test

      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.yml down  # Finaliza os serviços

  deploy:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK for Deployment
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Docker Image
        run: docker build -t cidadelimpa:latest .

      - name: Push Docker Image to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          docker tag cidadelimpa:latest karolinelays2021/cidadelimpa:latest
          docker push karolinelays2021/cidadelimpa:latest

      - name: Deploy application with Docker Compose
        run: docker compose -f docker-compose.yml up -d --build
